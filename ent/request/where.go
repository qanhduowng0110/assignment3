// Code generated by ent, DO NOT EDIT.

package request

import (
	"assignment3/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Request {
	return predicate.Request(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Request {
	return predicate.Request(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Request {
	return predicate.Request(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Request {
	return predicate.Request(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Request {
	return predicate.Request(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Request {
	return predicate.Request(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Request {
	return predicate.Request(sql.FieldLTE(FieldID, id))
}

// RequestURL applies equality check predicate on the "request_url" field. It's identical to RequestURLEQ.
func RequestURL(v string) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldRequestURL, v))
}

// RequestMethod applies equality check predicate on the "request_method" field. It's identical to RequestMethodEQ.
func RequestMethod(v string) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldRequestMethod, v))
}

// ResponseStatusCode applies equality check predicate on the "response_status_code" field. It's identical to ResponseStatusCodeEQ.
func ResponseStatusCode(v int32) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldResponseStatusCode, v))
}

// RequestTimestamp applies equality check predicate on the "request_timestamp" field. It's identical to RequestTimestampEQ.
func RequestTimestamp(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldRequestTimestamp, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldUpdatedAt, v))
}

// RequestURLEQ applies the EQ predicate on the "request_url" field.
func RequestURLEQ(v string) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldRequestURL, v))
}

// RequestURLNEQ applies the NEQ predicate on the "request_url" field.
func RequestURLNEQ(v string) predicate.Request {
	return predicate.Request(sql.FieldNEQ(FieldRequestURL, v))
}

// RequestURLIn applies the In predicate on the "request_url" field.
func RequestURLIn(vs ...string) predicate.Request {
	return predicate.Request(sql.FieldIn(FieldRequestURL, vs...))
}

// RequestURLNotIn applies the NotIn predicate on the "request_url" field.
func RequestURLNotIn(vs ...string) predicate.Request {
	return predicate.Request(sql.FieldNotIn(FieldRequestURL, vs...))
}

// RequestURLGT applies the GT predicate on the "request_url" field.
func RequestURLGT(v string) predicate.Request {
	return predicate.Request(sql.FieldGT(FieldRequestURL, v))
}

// RequestURLGTE applies the GTE predicate on the "request_url" field.
func RequestURLGTE(v string) predicate.Request {
	return predicate.Request(sql.FieldGTE(FieldRequestURL, v))
}

// RequestURLLT applies the LT predicate on the "request_url" field.
func RequestURLLT(v string) predicate.Request {
	return predicate.Request(sql.FieldLT(FieldRequestURL, v))
}

// RequestURLLTE applies the LTE predicate on the "request_url" field.
func RequestURLLTE(v string) predicate.Request {
	return predicate.Request(sql.FieldLTE(FieldRequestURL, v))
}

// RequestURLContains applies the Contains predicate on the "request_url" field.
func RequestURLContains(v string) predicate.Request {
	return predicate.Request(sql.FieldContains(FieldRequestURL, v))
}

// RequestURLHasPrefix applies the HasPrefix predicate on the "request_url" field.
func RequestURLHasPrefix(v string) predicate.Request {
	return predicate.Request(sql.FieldHasPrefix(FieldRequestURL, v))
}

// RequestURLHasSuffix applies the HasSuffix predicate on the "request_url" field.
func RequestURLHasSuffix(v string) predicate.Request {
	return predicate.Request(sql.FieldHasSuffix(FieldRequestURL, v))
}

// RequestURLIsNil applies the IsNil predicate on the "request_url" field.
func RequestURLIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldRequestURL))
}

// RequestURLNotNil applies the NotNil predicate on the "request_url" field.
func RequestURLNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldRequestURL))
}

// RequestURLEqualFold applies the EqualFold predicate on the "request_url" field.
func RequestURLEqualFold(v string) predicate.Request {
	return predicate.Request(sql.FieldEqualFold(FieldRequestURL, v))
}

// RequestURLContainsFold applies the ContainsFold predicate on the "request_url" field.
func RequestURLContainsFold(v string) predicate.Request {
	return predicate.Request(sql.FieldContainsFold(FieldRequestURL, v))
}

// RequestMethodEQ applies the EQ predicate on the "request_method" field.
func RequestMethodEQ(v string) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldRequestMethod, v))
}

// RequestMethodNEQ applies the NEQ predicate on the "request_method" field.
func RequestMethodNEQ(v string) predicate.Request {
	return predicate.Request(sql.FieldNEQ(FieldRequestMethod, v))
}

// RequestMethodIn applies the In predicate on the "request_method" field.
func RequestMethodIn(vs ...string) predicate.Request {
	return predicate.Request(sql.FieldIn(FieldRequestMethod, vs...))
}

// RequestMethodNotIn applies the NotIn predicate on the "request_method" field.
func RequestMethodNotIn(vs ...string) predicate.Request {
	return predicate.Request(sql.FieldNotIn(FieldRequestMethod, vs...))
}

// RequestMethodGT applies the GT predicate on the "request_method" field.
func RequestMethodGT(v string) predicate.Request {
	return predicate.Request(sql.FieldGT(FieldRequestMethod, v))
}

// RequestMethodGTE applies the GTE predicate on the "request_method" field.
func RequestMethodGTE(v string) predicate.Request {
	return predicate.Request(sql.FieldGTE(FieldRequestMethod, v))
}

// RequestMethodLT applies the LT predicate on the "request_method" field.
func RequestMethodLT(v string) predicate.Request {
	return predicate.Request(sql.FieldLT(FieldRequestMethod, v))
}

// RequestMethodLTE applies the LTE predicate on the "request_method" field.
func RequestMethodLTE(v string) predicate.Request {
	return predicate.Request(sql.FieldLTE(FieldRequestMethod, v))
}

// RequestMethodContains applies the Contains predicate on the "request_method" field.
func RequestMethodContains(v string) predicate.Request {
	return predicate.Request(sql.FieldContains(FieldRequestMethod, v))
}

// RequestMethodHasPrefix applies the HasPrefix predicate on the "request_method" field.
func RequestMethodHasPrefix(v string) predicate.Request {
	return predicate.Request(sql.FieldHasPrefix(FieldRequestMethod, v))
}

// RequestMethodHasSuffix applies the HasSuffix predicate on the "request_method" field.
func RequestMethodHasSuffix(v string) predicate.Request {
	return predicate.Request(sql.FieldHasSuffix(FieldRequestMethod, v))
}

// RequestMethodIsNil applies the IsNil predicate on the "request_method" field.
func RequestMethodIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldRequestMethod))
}

// RequestMethodNotNil applies the NotNil predicate on the "request_method" field.
func RequestMethodNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldRequestMethod))
}

// RequestMethodEqualFold applies the EqualFold predicate on the "request_method" field.
func RequestMethodEqualFold(v string) predicate.Request {
	return predicate.Request(sql.FieldEqualFold(FieldRequestMethod, v))
}

// RequestMethodContainsFold applies the ContainsFold predicate on the "request_method" field.
func RequestMethodContainsFold(v string) predicate.Request {
	return predicate.Request(sql.FieldContainsFold(FieldRequestMethod, v))
}

// RequestHeadersIsNil applies the IsNil predicate on the "request_headers" field.
func RequestHeadersIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldRequestHeaders))
}

// RequestHeadersNotNil applies the NotNil predicate on the "request_headers" field.
func RequestHeadersNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldRequestHeaders))
}

// RequestBodyIsNil applies the IsNil predicate on the "request_body" field.
func RequestBodyIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldRequestBody))
}

// RequestBodyNotNil applies the NotNil predicate on the "request_body" field.
func RequestBodyNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldRequestBody))
}

// ResponseStatusCodeEQ applies the EQ predicate on the "response_status_code" field.
func ResponseStatusCodeEQ(v int32) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldResponseStatusCode, v))
}

// ResponseStatusCodeNEQ applies the NEQ predicate on the "response_status_code" field.
func ResponseStatusCodeNEQ(v int32) predicate.Request {
	return predicate.Request(sql.FieldNEQ(FieldResponseStatusCode, v))
}

// ResponseStatusCodeIn applies the In predicate on the "response_status_code" field.
func ResponseStatusCodeIn(vs ...int32) predicate.Request {
	return predicate.Request(sql.FieldIn(FieldResponseStatusCode, vs...))
}

// ResponseStatusCodeNotIn applies the NotIn predicate on the "response_status_code" field.
func ResponseStatusCodeNotIn(vs ...int32) predicate.Request {
	return predicate.Request(sql.FieldNotIn(FieldResponseStatusCode, vs...))
}

// ResponseStatusCodeGT applies the GT predicate on the "response_status_code" field.
func ResponseStatusCodeGT(v int32) predicate.Request {
	return predicate.Request(sql.FieldGT(FieldResponseStatusCode, v))
}

// ResponseStatusCodeGTE applies the GTE predicate on the "response_status_code" field.
func ResponseStatusCodeGTE(v int32) predicate.Request {
	return predicate.Request(sql.FieldGTE(FieldResponseStatusCode, v))
}

// ResponseStatusCodeLT applies the LT predicate on the "response_status_code" field.
func ResponseStatusCodeLT(v int32) predicate.Request {
	return predicate.Request(sql.FieldLT(FieldResponseStatusCode, v))
}

// ResponseStatusCodeLTE applies the LTE predicate on the "response_status_code" field.
func ResponseStatusCodeLTE(v int32) predicate.Request {
	return predicate.Request(sql.FieldLTE(FieldResponseStatusCode, v))
}

// ResponseStatusCodeIsNil applies the IsNil predicate on the "response_status_code" field.
func ResponseStatusCodeIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldResponseStatusCode))
}

// ResponseStatusCodeNotNil applies the NotNil predicate on the "response_status_code" field.
func ResponseStatusCodeNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldResponseStatusCode))
}

// ResponseBodyIsNil applies the IsNil predicate on the "response_body" field.
func ResponseBodyIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldResponseBody))
}

// ResponseBodyNotNil applies the NotNil predicate on the "response_body" field.
func ResponseBodyNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldResponseBody))
}

// RequestTimestampEQ applies the EQ predicate on the "request_timestamp" field.
func RequestTimestampEQ(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldRequestTimestamp, v))
}

// RequestTimestampNEQ applies the NEQ predicate on the "request_timestamp" field.
func RequestTimestampNEQ(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldNEQ(FieldRequestTimestamp, v))
}

// RequestTimestampIn applies the In predicate on the "request_timestamp" field.
func RequestTimestampIn(vs ...time.Time) predicate.Request {
	return predicate.Request(sql.FieldIn(FieldRequestTimestamp, vs...))
}

// RequestTimestampNotIn applies the NotIn predicate on the "request_timestamp" field.
func RequestTimestampNotIn(vs ...time.Time) predicate.Request {
	return predicate.Request(sql.FieldNotIn(FieldRequestTimestamp, vs...))
}

// RequestTimestampGT applies the GT predicate on the "request_timestamp" field.
func RequestTimestampGT(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldGT(FieldRequestTimestamp, v))
}

// RequestTimestampGTE applies the GTE predicate on the "request_timestamp" field.
func RequestTimestampGTE(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldGTE(FieldRequestTimestamp, v))
}

// RequestTimestampLT applies the LT predicate on the "request_timestamp" field.
func RequestTimestampLT(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldLT(FieldRequestTimestamp, v))
}

// RequestTimestampLTE applies the LTE predicate on the "request_timestamp" field.
func RequestTimestampLTE(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldLTE(FieldRequestTimestamp, v))
}

// RequestTimestampIsNil applies the IsNil predicate on the "request_timestamp" field.
func RequestTimestampIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldRequestTimestamp))
}

// RequestTimestampNotNil applies the NotNil predicate on the "request_timestamp" field.
func RequestTimestampNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldRequestTimestamp))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Request {
	return predicate.Request(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Request {
	return predicate.Request(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldLTE(FieldCreatedAt, v))
}

// CreatedAtIsNil applies the IsNil predicate on the "created_at" field.
func CreatedAtIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldCreatedAt))
}

// CreatedAtNotNil applies the NotNil predicate on the "created_at" field.
func CreatedAtNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldCreatedAt))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Request {
	return predicate.Request(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Request {
	return predicate.Request(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Request {
	return predicate.Request(sql.FieldLTE(FieldUpdatedAt, v))
}

// UpdatedAtIsNil applies the IsNil predicate on the "updated_at" field.
func UpdatedAtIsNil() predicate.Request {
	return predicate.Request(sql.FieldIsNull(FieldUpdatedAt))
}

// UpdatedAtNotNil applies the NotNil predicate on the "updated_at" field.
func UpdatedAtNotNil() predicate.Request {
	return predicate.Request(sql.FieldNotNull(FieldUpdatedAt))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Request) predicate.Request {
	return predicate.Request(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Request) predicate.Request {
	return predicate.Request(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Request) predicate.Request {
	return predicate.Request(sql.NotPredicates(p))
}
